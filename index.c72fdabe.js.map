{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\nclass $a5fd07fa01589658$var$Game {\n    static InitialState = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ];\n    static InitialStatus = {\n        idle: \"idle\",\n        playing: \"playing\",\n        win: \"win\",\n        lose: \"lose\"\n    };\n    constructor(initialState = $a5fd07fa01589658$var$Game.InitialState){\n        this.score = 0;\n        this.status = $a5fd07fa01589658$var$Game.InitialStatus.idle;\n        this.state = initialState.map((item)=>[\n                ...item\n            ]);\n    }\n    moveLeft() {\n        if (this.status !== \"playing\") return false;\n        const noEmptyArray = [\n            [],\n            [],\n            [],\n            []\n        ];\n        const noEmptyArrayMarges = [\n            [],\n            [],\n            [],\n            []\n        ];\n        for(let i = 0; i < 4; i++)noEmptyArray[i] = this.state[i].filter((cell)=>cell !== 0);\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < noEmptyArray[i].length; j++)if (noEmptyArray[i][j] === noEmptyArray[i][j + 1]) {\n                this.score += noEmptyArray[i][j];\n                noEmptyArray[i][j] = noEmptyArray[i][j] * 2;\n                noEmptyArray[i][j + 1] = 0;\n                j++;\n            }\n        }\n        for(let i = 0; i < 4; i++)noEmptyArrayMarges[i] = noEmptyArray[i].filter((cell)=>cell !== 0);\n        for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++){\n            if (noEmptyArrayMarges[i][j] > 0) this.state[i][j] = noEmptyArrayMarges[i][j];\n            else if (!noEmptyArrayMarges[i][j]) this.state[i][j] = 0;\n        }\n        this.boards();\n    }\n    moveRight() {\n        if (this.status !== \"playing\") return false;\n        const noEmptyArray = [\n            [],\n            [],\n            [],\n            []\n        ];\n        const noEmptyArrayMarges = [\n            [],\n            [],\n            [],\n            []\n        ];\n        for(let i = 0; i < 4; i++)noEmptyArray[i] = this.state[i].filter((cell)=>cell !== 0);\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < noEmptyArray[i].length; j++)if (noEmptyArray[i][j] === noEmptyArray[i][j + 1]) {\n                this.score += noEmptyArray[i][j];\n                noEmptyArray[i][j] = noEmptyArray[i][j] * 2;\n                noEmptyArray[i][j + 1] = 0;\n                j++;\n            }\n        }\n        for(let i = 0; i < 4; i++)noEmptyArrayMarges[i] = noEmptyArray[i].filter((cell)=>cell !== 0);\n        for(let i = 0; i < 4; i++){\n            let countLeft = 0;\n            let countRight = 3;\n            for(let j = 3; j >= 0; j--){\n                if (noEmptyArrayMarges[i][j] && noEmptyArrayMarges[i][j] > 0) {\n                    this.state[i][countRight] = noEmptyArrayMarges[i][j];\n                    countRight--;\n                } else if (!noEmptyArrayMarges[i][j]) {\n                    this.state[i][countLeft] = 0;\n                    countLeft++;\n                }\n            }\n        }\n        this.boards();\n    }\n    moveUp() {\n        if (this.status !== \"playing\") return false;\n        const transformArray = [\n            [],\n            [],\n            [],\n            []\n        ];\n        for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++)transformArray[j][i] = this.state[i][j];\n        const noEmptyArray = [\n            [],\n            [],\n            [],\n            []\n        ];\n        const noEmptyArrayMarges = [\n            [],\n            [],\n            [],\n            []\n        ];\n        for(let i = 0; i < 4; i++)noEmptyArray[i] = transformArray[i].filter((cell)=>cell !== 0);\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < noEmptyArray[i].length; j++)if (noEmptyArray[i][j] === noEmptyArray[i][j + 1]) {\n                this.score += noEmptyArray[i][j];\n                noEmptyArray[i][j] = noEmptyArray[i][j] * 2;\n                noEmptyArray[i][j + 1] = 0;\n                j++;\n            }\n        }\n        for(let i = 0; i < 4; i++)noEmptyArrayMarges[i] = noEmptyArray[i].filter((cell)=>cell !== 0);\n        for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++){\n            if (noEmptyArrayMarges[i][j] > 0) transformArray[i][j] = noEmptyArrayMarges[i][j];\n            else if (!noEmptyArrayMarges[i][j]) transformArray[i][j] = 0;\n        }\n        for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++)this.state[i][j] = transformArray[j][i];\n        this.boards();\n    }\n    moveDown() {\n        if (this.status !== \"playing\") return false;\n        const transformArray = [\n            [],\n            [],\n            [],\n            []\n        ];\n        for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++)transformArray[j][i] = this.state[i][j];\n        const noEmptyArray = [\n            [],\n            [],\n            [],\n            []\n        ];\n        const noEmptyArrayMarges = [\n            [],\n            [],\n            [],\n            []\n        ];\n        for(let i = 0; i < 4; i++)noEmptyArray[i] = transformArray[i].filter((cell)=>cell !== 0);\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < noEmptyArray[i].length; j++)if (noEmptyArray[i][j] === noEmptyArray[i][j + 1]) {\n                this.score += noEmptyArray[i][j];\n                noEmptyArray[i][j] = noEmptyArray[i][j] * 2;\n                noEmptyArray[i][j + 1] = 0;\n                j++;\n            }\n        }\n        for(let i = 0; i < 4; i++)noEmptyArrayMarges[i] = noEmptyArray[i].filter((cell)=>cell !== 0);\n        for(let i = 0; i < 4; i++){\n            let countLeft = 0;\n            let countRight = 3;\n            for(let j = 3; j >= 0; j--){\n                if (noEmptyArrayMarges[i][j] && noEmptyArrayMarges[i][j] > 0) {\n                    transformArray[i][countRight] = noEmptyArrayMarges[i][j];\n                    countRight--;\n                } else if (!noEmptyArrayMarges[i][j]) {\n                    transformArray[i][countLeft] = 0;\n                    countLeft++;\n                }\n            }\n        }\n        for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++)this.state[i][j] = transformArray[j][i];\n        this.boards();\n    }\n    getScore() {\n        return this.score;\n    }\n    getStatus() {\n        const win = document.querySelector(\".message-win\");\n        const lose = document.querySelector(\".message-lose\");\n        if (this.status === \"win\") win.classList.remove(\"hidden\");\n        else if (this.status === \"lose\") lose.classList.remove(\"hidden\");\n        else if (this.status === \"playing\") {\n            win.classList.add(\"hidden\");\n            lose.classList.add(\"hidden\");\n        }\n    }\n    getState() {\n        document.querySelectorAll(\".field-cell\").forEach((cell, index)=>{\n            cell.classList.remove(`field-cell--${cell.textContent}`);\n            cell.textContent = this.state.flat()[index] === 0 ? \"\" : this.state.flat()[index];\n            cell.classList.add(`field-cell--${cell.textContent}`);\n        });\n        if (!this.state.flat().includes(0)) this.status = $a5fd07fa01589658$var$Game.InitialStatus.lose;\n        else if (this.state.flat().includes(2048)) this.status = $a5fd07fa01589658$var$Game.InitialStatus.win;\n    }\n    start() {\n        this.state = $a5fd07fa01589658$var$Game.InitialState.map((item)=>[\n                ...item\n            ]);\n        this.score = 0;\n        this.randomCells();\n        this.randomCells();\n        this.status = $a5fd07fa01589658$var$Game.InitialStatus.playing;\n        return this.status;\n    }\n    restart() {\n        this.score = 0;\n        this.state = $a5fd07fa01589658$var$Game.InitialState.map((item)=>[\n                ...item\n            ]);\n        this.getState();\n    }\n    randomCells() {\n        const empty = [];\n        this.state.map((row, indexRow)=>{\n            row.map((cell, indexCell)=>{\n                if (cell === 0) empty.push({\n                    indexRow: indexRow,\n                    indexCell: indexCell\n                });\n            });\n        });\n        const randomCell = Math.round(Math.random() * (empty.length - 1));\n        this.state[empty[randomCell].indexRow][empty[randomCell].indexCell] = Math.random() < 0.9 ? 2 : 4;\n    }\n    boards() {\n        const board = [];\n        document.querySelectorAll(\".field-cell\").forEach((cell, index)=>{\n            board[index] = cell.textContent === \"\" ? 0 : cell.textContent;\n        });\n        if (this.state.flat().toString() !== board.toString()) this.randomCells();\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\n\"use strict\";\nconst $09e991522ca7e64e$var$game = new (0, (/*@__PURE__*/$parcel$interopDefault($a5fd07fa01589658$exports)))();\nconst $09e991522ca7e64e$var$gameScore = document.querySelector(\".game-score\");\nconst $09e991522ca7e64e$var$button = document.querySelector(\".button\");\nconst $09e991522ca7e64e$var$messageStart = document.querySelector(\".message-start\");\n$09e991522ca7e64e$var$button.addEventListener(\"click\", ()=>{\n    $09e991522ca7e64e$var$messageStart.classList.toggle(\"hidden\");\n    $09e991522ca7e64e$var$button.classList.toggle(\"restart\");\n    if (document.querySelector(\".restart\")) {\n        document.querySelector(\".restart\").textContent = \"Restart\";\n        $09e991522ca7e64e$var$game.start();\n    }\n    $09e991522ca7e64e$var$button.classList.toggle(\"start\");\n    if (document.querySelector(\".start\")) {\n        document.querySelector(\".start\").textContent = \"Start\";\n        $09e991522ca7e64e$var$game.restart();\n        $09e991522ca7e64e$var$gameScore.textContent = $09e991522ca7e64e$var$game.getScore();\n    }\n    $09e991522ca7e64e$var$game.getState();\n});\ndocument.addEventListener(\"keydown\", (e)=>{\n    switch(e.key){\n        case \"ArrowLeft\":\n            $09e991522ca7e64e$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $09e991522ca7e64e$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $09e991522ca7e64e$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $09e991522ca7e64e$var$game.moveDown();\n            break;\n    }\n    $09e991522ca7e64e$var$gameScore.textContent = $09e991522ca7e64e$var$game.getScore();\n    $09e991522ca7e64e$var$game.getState();\n    $09e991522ca7e64e$var$game.getStatus();\n});\n\n\n//# sourceMappingURL=index.c72fdabe.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\n\nimport Game from '../modules/Game.class';\n\nconst game = new Game();\nconst gameScore = document.querySelector('.game-score');\nconst button = document.querySelector('.button');\nconst messageStart = document.querySelector('.message-start');\n\nbutton.addEventListener('click', () => {\n  messageStart.classList.toggle('hidden');\n  button.classList.toggle('restart');\n\n  if (document.querySelector('.restart')) {\n    document.querySelector('.restart').textContent = 'Restart';\n    game.start();\n  }\n  button.classList.toggle('start');\n\n  if (document.querySelector('.start')) {\n    document.querySelector('.start').textContent = 'Start';\n    game.restart();\n    gameScore.textContent = game.getScore();\n  }\n  game.getState();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  switch (e.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n  }\n  gameScore.textContent = game.getScore();\n  game.getState();\n  game.getStatus();\n});\n","'use strict';\n\nclass Game {\n  static InitialState = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  static InitialStatus = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  constructor(initialState = Game.InitialState) {\n    this.score = 0;\n    this.status = Game.InitialStatus.idle;\n    this.state = initialState.map((item) => [...item]);\n  }\n\n  moveLeft() {\n    if (this.status !== 'playing') {\n      return false;\n    }\n\n    const noEmptyArray = [[], [], [], []];\n    const noEmptyArrayMarges = [[], [], [], []];\n\n    for (let i = 0; i < 4; i++) {\n      noEmptyArray[i] = this.state[i].filter((cell) => cell !== 0);\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < noEmptyArray[i].length; j++) {\n        if (noEmptyArray[i][j] === noEmptyArray[i][j + 1]) {\n          this.score += noEmptyArray[i][j];\n          noEmptyArray[i][j] = noEmptyArray[i][j] * 2;\n          noEmptyArray[i][j + 1] = 0;\n          j++;\n        }\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      noEmptyArrayMarges[i] = noEmptyArray[i].filter((cell) => cell !== 0);\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (noEmptyArrayMarges[i][j] > 0) {\n          this.state[i][j] = noEmptyArrayMarges[i][j];\n        } else if (!noEmptyArrayMarges[i][j]) {\n          this.state[i][j] = 0;\n        }\n      }\n    }\n\n    this.boards();\n  }\n\n  moveRight() {\n    if (this.status !== 'playing') {\n      return false;\n    }\n\n    const noEmptyArray = [[], [], [], []];\n    const noEmptyArrayMarges = [[], [], [], []];\n\n    for (let i = 0; i < 4; i++) {\n      noEmptyArray[i] = this.state[i].filter((cell) => cell !== 0);\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < noEmptyArray[i].length; j++) {\n        if (noEmptyArray[i][j] === noEmptyArray[i][j + 1]) {\n          this.score += noEmptyArray[i][j];\n          noEmptyArray[i][j] = noEmptyArray[i][j] * 2;\n          noEmptyArray[i][j + 1] = 0;\n          j++;\n        }\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      noEmptyArrayMarges[i] = noEmptyArray[i].filter((cell) => cell !== 0);\n    }\n\n    for (let i = 0; i < 4; i++) {\n      let countLeft = 0;\n      let countRight = 3;\n\n      for (let j = 3; j >= 0; j--) {\n        if (noEmptyArrayMarges[i][j] && noEmptyArrayMarges[i][j] > 0) {\n          this.state[i][countRight] = noEmptyArrayMarges[i][j];\n          countRight--;\n        } else if (!noEmptyArrayMarges[i][j]) {\n          this.state[i][countLeft] = 0;\n          countLeft++;\n        }\n      }\n    }\n\n    this.boards();\n  }\n\n  moveUp() {\n    if (this.status !== 'playing') {\n      return false;\n    }\n\n    const transformArray = [[], [], [], []];\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        transformArray[j][i] = this.state[i][j];\n      }\n    }\n\n    const noEmptyArray = [[], [], [], []];\n    const noEmptyArrayMarges = [[], [], [], []];\n\n    for (let i = 0; i < 4; i++) {\n      noEmptyArray[i] = transformArray[i].filter((cell) => cell !== 0);\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < noEmptyArray[i].length; j++) {\n        if (noEmptyArray[i][j] === noEmptyArray[i][j + 1]) {\n          this.score += noEmptyArray[i][j];\n          noEmptyArray[i][j] = noEmptyArray[i][j] * 2;\n          noEmptyArray[i][j + 1] = 0;\n          j++;\n        }\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      noEmptyArrayMarges[i] = noEmptyArray[i].filter((cell) => cell !== 0);\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (noEmptyArrayMarges[i][j] > 0) {\n          transformArray[i][j] = noEmptyArrayMarges[i][j];\n        } else if (!noEmptyArrayMarges[i][j]) {\n          transformArray[i][j] = 0;\n        }\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        this.state[i][j] = transformArray[j][i];\n      }\n    }\n\n    this.boards();\n  }\n\n  moveDown() {\n    if (this.status !== 'playing') {\n      return false;\n    }\n\n    const transformArray = [[], [], [], []];\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        transformArray[j][i] = this.state[i][j];\n      }\n    }\n\n    const noEmptyArray = [[], [], [], []];\n    const noEmptyArrayMarges = [[], [], [], []];\n\n    for (let i = 0; i < 4; i++) {\n      noEmptyArray[i] = transformArray[i].filter((cell) => cell !== 0);\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < noEmptyArray[i].length; j++) {\n        if (noEmptyArray[i][j] === noEmptyArray[i][j + 1]) {\n          this.score += noEmptyArray[i][j];\n          noEmptyArray[i][j] = noEmptyArray[i][j] * 2;\n          noEmptyArray[i][j + 1] = 0;\n          j++;\n        }\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      noEmptyArrayMarges[i] = noEmptyArray[i].filter((cell) => cell !== 0);\n    }\n\n    for (let i = 0; i < 4; i++) {\n      let countLeft = 0;\n      let countRight = 3;\n\n      for (let j = 3; j >= 0; j--) {\n        if (noEmptyArrayMarges[i][j] && noEmptyArrayMarges[i][j] > 0) {\n          transformArray[i][countRight] = noEmptyArrayMarges[i][j];\n          countRight--;\n        } else if (!noEmptyArrayMarges[i][j]) {\n          transformArray[i][countLeft] = 0;\n          countLeft++;\n        }\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        this.state[i][j] = transformArray[j][i];\n      }\n    }\n\n    this.boards();\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    const win = document.querySelector('.message-win');\n    const lose = document.querySelector('.message-lose');\n\n    if (this.status === 'win') {\n      win.classList.remove('hidden');\n    } else if (this.status === 'lose') {\n      lose.classList.remove('hidden');\n    } else if (this.status === 'playing') {\n      win.classList.add('hidden');\n      lose.classList.add('hidden');\n    }\n  }\n\n  getState() {\n    document.querySelectorAll('.field-cell').forEach((cell, index) => {\n      cell.classList.remove(`field-cell--${cell.textContent}`);\n\n      cell.textContent =\n        this.state.flat()[index] === 0 ? '' : this.state.flat()[index];\n\n      cell.classList.add(`field-cell--${cell.textContent}`);\n    });\n\n    if (!this.state.flat().includes(0)) {\n      this.status = Game.InitialStatus.lose;\n    } else if (this.state.flat().includes(2048)) {\n      this.status = Game.InitialStatus.win;\n    }\n  }\n\n  start() {\n    this.state = Game.InitialState.map((item) => [...item]);\n    this.score = 0;\n    this.randomCells();\n    this.randomCells();\n    this.status = Game.InitialStatus.playing;\n\n    return this.status;\n  }\n\n  restart() {\n    this.score = 0;\n    this.state = Game.InitialState.map((item) => [...item]);\n    this.getState();\n  }\n  randomCells() {\n    const empty = [];\n\n    this.state.map((row, indexRow) => {\n      row.map((cell, indexCell) => {\n        if (cell === 0) {\n          empty.push({\n            indexRow,\n            indexCell,\n          });\n        }\n      });\n    });\n\n    const randomCell = Math.round(Math.random() * (empty.length - 1));\n\n    this.state[empty[randomCell].indexRow][empty[randomCell].indexCell] =\n      Math.random() < 0.9 ? 2 : 4;\n  }\n\n  boards() {\n    const board = [];\n\n    document.querySelectorAll('.field-cell').forEach((cell, index) => {\n      board[index] = cell.textContent === '' ? 0 : cell.textContent;\n    });\n\n    if (this.state.flat().toString() !== board.toString()) {\n      this.randomCells();\n    }\n  }\n}\n\nmodule.exports = Game;\n"],"names":["$a5fd07fa01589658$exports","$a5fd07fa01589658$var$Game","InitialState","InitialStatus","idle","playing","win","lose","constructor","initialState","score","status","state","map","item","moveLeft","noEmptyArray","noEmptyArrayMarges","i","filter","cell","j","length","boards","moveRight","countLeft","countRight","moveUp","transformArray","moveDown","getScore","getStatus","document","querySelector","classList","remove","add","getState","querySelectorAll","forEach","index","textContent","flat","includes","start","randomCells","restart","empty","row","indexRow","indexCell","push","randomCell","Math","round","random","board","toString","$09e991522ca7e64e$var$game","a","__esModule","default","$09e991522ca7e64e$var$gameScore","$09e991522ca7e64e$var$button","$09e991522ca7e64e$var$messageStart","addEventListener","toggle","e","key"],"version":3,"file":"index.c72fdabe.js.map"}